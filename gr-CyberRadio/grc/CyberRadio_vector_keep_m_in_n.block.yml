# auto-generated by grc.converter

id: CyberRadio_vector_keep_m_in_n
label: '[CyberRadio] Vector Keep M in N'
category: '[CyberRadio]/DSP Functions'

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: m
    label: M
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: n
    label: N
    dtype: int
    default: '2'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: offset
    label: initial offset
    dtype: int
    default: '0'

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ n }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ m }
asserts:
- ${ n > 0 }
- ${ m > 0 }
- ${ m <= n }

templates:
    imports: import CyberRadio
    make: CyberRadio.vector_keep_m_in_n(${type.size}, ${m}, ${n}, ${offset})
    callbacks:
    - set_offset(${offset})

file_format: 1
