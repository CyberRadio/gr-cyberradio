# auto-generated by grc.converter

id: CyberRadio_ndr804ptt_snapshot_fft_source
label: '[CyberRadio] NDR804-PTT Snapshot FFT Source'
category: '[CyberRadio]/Vita and UDP Sources/NDR804'

parameters:
-   id: avgGainList
    label: Avg Gain List
    dtype: real_vector
    default: '[1.0/8,1.0/32,]'
    hide: part
-   id: dipIndex
    label: DIP Index
    dtype: int
    default: '-1'
    hide: part
-   id: doLog10
    label: Do log10?
    dtype: bool
    default: 'True'
    hide: part
-   id: enable
    label: Enable
    dtype: bool
    default: 'True'
    hide: part
-   id: fftSize
    label: FFT Size (samples)
    dtype: int
    default: int(2**17)
-   id: fftWindowType
    label: FFT Window type
    dtype: string
    default: '"flattop"'
-   id: index
    label: Tuner/DDC Index
    dtype: int
    default: '1'
-   id: localInterface
    label: Local Ethernet Interface
    dtype: string
    default: '""'
    hide: part
-   id: otherDdcArgs
    label: Other DDC Args
    dtype: raw
    default: '{}'
    hide: part
-   id: otherTunerArgs
    label: Other Tuner Args
    dtype: raw
    default: '{}'
    hide: part
-   id: outSize
    label: Output Size (samples)
    dtype: int
    default: int((40.0/51.2)*(2**17))
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: radioInterface
    label: Radio Ethernet Interface Index
    dtype: int
    default: '1'
    hide: part
-   id: radioParam
    label: radioParam
    dtype: raw
    default: '{"type":"ndr804-ptt", "host":"ndr308", "port":8617, "obj":None}'
    hide: part
-   id: rate
    label: FFT Rate
    dtype: int
    default: '16'
-   id: rfAtten
    label: RF Attenuation (dB)
    dtype: int
    default: '0'
    hide: part
-   id: rfFilter
    label: RF Filter
    dtype: int
    default: '1'
    hide: part
-   id: rfFreq
    label: RF Freq (MHz)
    dtype: int
    default: '1000'
-   id: udpPort
    label: UDP Port
    dtype: int
    default: '11000'
-   id: clearFftAvg
    label: Clear Average
    dtype: bool
    default: 'False'
    hide: part

inputs:
-   domain: message
    id: rfFreq
    optional: true
-   domain: message
    id: clearAvg
    optional: true

outputs:
-   domain: message
    id: rfFreq
    optional: true
-   label: Out
    domain: stream
    dtype: float
    vlen: ${ outSize }
    optional: true
-   label: Avg
    domain: stream
    dtype: float
    vlen: ${ outSize }
    multiplicity: ${ len(avgGainList) }
    optional: true

templates:
    imports: import CyberRadio
    make: |-
        CyberRadio.ndr804ptt_snapshot_fft_source(
              avgGainList=${avgGainList},
            dipIndex=${dipIndex},
            doLog10=${doLog10},
            enable=${enable},
            fftSize=${fftSize},
            fftWindowType=${fftWindowType},
            index=${index},
            localInterface=${localInterface},
            otherDdcArgs=${otherDdcArgs},
            otherTunerArgs=${otherTunerArgs},
            outSize=${outSize},
            radioInterface=${radioInterface},
            radioParam=${radioParam},
            rate=${rate},
            rfAtten=${rfAtten},
            rfFilter=${rfFilter},
            rfFreq=${rfFreq},
            udpPort=${udpPort},
        )
    callbacks:
    - set_avgGainList(${avgGainList})
    - set_dipIndex(${dipIndex})
    - set_doLog10(${doLog10})
    - set_enable(${enable})
    - set_fftSize(${fftSize})
    - set_fftWindowType(${fftWindowType})
    - set_index(${index})
    - set_localInterface(${localInterface})
    - set_otherDdcArgs(${otherDdcArgs})
    - set_otherTunerArgs(${otherTunerArgs})
    - set_outSize(${outSize})
    - set_radioInterface(${radioInterface})
    - set_radioParam(${radioParam})
    - set_rate(${rate})
    - set_rfAtten(${rfAtten})
    - set_rfFilter(${rfFilter})
    - set_rfFreq(${rfFreq})
    - set_udpPort(${udpPort})
    - clearAverage(${clearFftAvg})

file_format: 1
