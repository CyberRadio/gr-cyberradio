#########################################################
# CyberRadio Solutions NDR Control Software for GNU Radio
#########################################################

INTRODUCTION
------------
This document describes the components of the CRS NDR Control Software 
for GNU Radio, and how to build them.


REQUIRED SOFTWARE
-----------------
The CRS NDR Control Software for GNU Radio requires the following software to 
build and run successfully:
* GNU Radio suite, version 3.7.8 or later, and its associated dependencies.
  This includes, but is not limited to, the following:
    * Boost headers and libraries, version 1.47 or later
    * CppUnit
    * SWIG
    * CMake
    * Python 2.7
* CRS NDR Control Shared Library (libcyberradio)
* NetIfaces Python package
* Doxygen for automatic documentation generation


BUILDING AND INSTALLING
-----------------------
* Create a build folder and change into it.
      mkdir build
      cd build
* Determine which version of Boost to use (either the default version 
  currently installed on the OS, or a custom-built version).  If using a 
  custom version, get the following two directories:
  (1) The top-level directory containing the include/boost header path.  For 
      example, if Boost headers have been installed into 
	  /usr/local/include/boost, then this path is /usr/local.
  (2) The directory where the Boost libraries are located.  For example, if 
      Boost libraries have been installed into /usr/local/lib, then this path 
	  is /usr/local/lib.
* Configure the build.  
  If using the OS-installed Boost libraries, no arguments to CMake are needed.
      cmake ..
  However, if using a custom version, supply CMake with the two paths deter-
  mined in the prior step.
      cmake -DBOOST_INCLUDEDIR=/usr/local -DBOOST_LIBRARYDIR=/usr/local/lib ..
* Make the package.
      make
* Install the library, its headers, and its documentation (if Doxygen is 
  installed).
      sudo make install


DEBIAN PACKAGES
---------------
The CRS NDR Radio Driver for Python can be deployed on target systems 
via Debian packages.  

Building Debian packages require installing the devscripts package, in 
addition to all other build requirements.  In addition, this method
requires building and installing the Debian package versions of the
NDR Radio Driver for Python (CyberRadioDriver) and the NDR Control 
Shared Library (libcyberradio).

The GNU Radio control software can be deployed in two different ways:
* Package gr-cyberradio includes all supported components of the 
  control software.  To generate the Debian packages for this method,
  use these commands:
      cd ..
      ./makedeb gr-cyberradio
* Packages gr-cyberradio-* implement a more modular packaging and 
  deployment system, thus allowing CRS to distribute only the packages
  that a particular installation and/or customer require.  To generate 
  the Debian packages for this method, use this command:
      cd ..
      ./make_all_debs 
Note that these two deployment methods are intended to be mutually exclusive.
